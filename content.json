{"meta":{"title":"姜兴业非官方网站","subtitle":"","description":null,"author":"姜兴业","url":"https://jiangxingye.github.io"},"pages":[{"title":"","date":"2019-08-16T03:08:23.833Z","updated":"2019-08-09T10:39:08.961Z","comments":true,"path":"README.html","permalink":"https://jiangxingye.github.io/README.html","excerpt":"","text":"为 layui 扩展的 下拉多选select在线demo： http://yelog.org/layui-select-multiple/ 这个在线 demo就是本项目的 index.html。 可将项目 clone 到本地查看效果。 效果图 参数 属性名 属性值 备注 multiple 无 开启多选 lay-search 无 开启搜索 lay-case 无 大小写敏感 lay-omit 无 开启多选简写，显示勾选条数 使用 将项目中的 form.js 覆盖自己项目中的 form.js。 引入下面cssselect[multiple]+.layui-form-select&gt;.layui-select-title&gt;input.layui-input{ border-bottom: 0} select[multiple]+.layui-form-select dd{ padding:0;} select[multiple]+.layui-form-select .layui-form-checkbox[lay-skin=primary]{ margin:0 !important; display:block; line-height:36px !important; position:relative; padding-left:26px;} select[multiple]+.layui-form-select .layui-form-checkbox[lay-skin=primary] span{line-height:36px !important; float:none;} select[multiple]+.layui-form-select .layui-form-checkbox[lay-skin=primary] i{ position:absolute; left:10px; top:0; margin-top:9px;} .multiSelect{ line-height:normal; height:auto; padding:4px 10px; overflow:hidden;min-height:38px; margin-top:-38px; left:0; z-index:99;position:relative;background:none;} .multiSelect a{ padding:2px 5px; background:#908e8e; border-radius:2px; color:#fff; display:block; line-height:20px; height:20px; margin:2px 5px 2px 0; float:left;} .multiSelect a span{ float:left;} .multiSelect a i {float:left;display:block;margin:2px 0 0 2px;border-radius:2px;width:8px;height:8px;padding:4px;position:relative;-webkit-transition:all .3s;transition:all .3s} .multiSelect a i:before, .multiSelect a i:after {position:absolute;left:8px;top:2px;content:&#39;&#39;;height:12px;width:1px;background-color:#fff} .multiSelect a i:before {-webkit-transform:rotate(45deg);transform:rotate(45deg)} .multiSelect a i:after {-webkit-transform:rotate(-45deg);transform:rotate(-45deg)} .multiSelect a i:hover{ background-color:#545556;} 使用实例下面实例 开启了下拉多选（multiple）, 并开启了检索功能（lay-search）。效果可以参考 在线实例 的 多选+搜索+大小写不敏感 模块 &lt;select name=&quot;多选+搜索+大小写不敏感&quot; lay-verify=&quot;required&quot; multiple lay-search&gt; &lt;option value=&quot;&quot;&gt;请选择您的兴趣爱好&lt;/option&gt; &lt;option&gt;sing1&lt;/option&gt; &lt;option selected&gt;sing2&lt;/option&gt; &lt;option&gt;SING1-大写&lt;/option&gt; &lt;option&gt;movie1&lt;/option&gt; &lt;option selected&gt;movie2&lt;/option&gt; &lt;option&gt;movie3&lt;/option&gt; &lt;option&gt;MOVIE4&lt;/option&gt; &lt;option&gt;swim&lt;/option&gt; &lt;option&gt;moon&lt;/option&gt; &lt;/select&gt; 更多实例参考 在线实例、或 index.html。 声明此项目基于 https://gitee.com/layuicms/XiaLaDuoXuan 项目修改得来，修复了一些bug，扩展了 简化多选、多选搜索、大小写敏感控制等功能。"},{"title":"","date":"2019-08-16T03:08:23.823Z","updated":"2019-08-09T10:39:09.131Z","comments":true,"path":"index.html","permalink":"https://jiangxingye.github.io/index.html","excerpt":"","text":"layui-select-multiple /* 下拉多选样式 需要引用*/ select[multiple]+.layui-form-select>.layui-select-title>input.layui-input{ border-bottom: 0} select[multiple]+.layui-form-select dd{ padding:0;} select[multiple]+.layui-form-select .layui-form-checkbox[lay-skin=primary]{ margin:0 !important; display:block; line-height:36px !important; position:relative; padding-left:26px;} select[multiple]+.layui-form-select .layui-form-checkbox[lay-skin=primary] span{line-height:36px !important; float:none;} select[multiple]+.layui-form-select .layui-form-checkbox[lay-skin=primary] i{ position:absolute; left:10px; top:0; margin-top:9px;} .multiSelect{ line-height:normal; height:auto; padding:4px 10px; overflow:hidden;min-height:38px; margin-top:-38px; left:0; z-index:99;position:relative;background:none;} .multiSelect a{ padding:2px 5px; background:#908e8e; border-radius:2px; color:#fff; display:block; line-height:20px; height:20px; margin:2px 5px 2px 0; float:left;} .multiSelect a span{ float:left;} .multiSelect a i {float:left;display:block;margin:2px 0 0 2px;border-radius:2px;width:8px;height:8px;padding:4px;position:relative;-webkit-transition:all .3s;transition:all .3s} .multiSelect a i:before, .multiSelect a i:after {position:absolute;left:8px;top:2px;content:'';height:12px;width:1px;background-color:#fff} .multiSelect a i:before {-webkit-transform:rotate(45deg);transform:rotate(45deg)} .multiSelect a i:after {-webkit-transform:rotate(-45deg);transform:rotate(-45deg)} .multiSelect a i:hover{ background-color:#545556;} /* 下面是页面内样式，无需引用 */ .layui-block { margin-bottom: 10px; } .layui-form-label { width: 180px; } .code { color: gray; margin-left: 10px; } .unshow>#result { display: none; } pre { padding: 5px; margin: 5px; } .string { color: green; } .number { color: darkorange; } .boolean { color: blue; } .null { color: magenta; } .key { color: red; } 基础属性 属性名 属性值 备注 multiple 无 开启多选 lay-search 无 开启搜索 lay-case 无 大小写敏感 lay-omit 无 开启多选简写，显示勾选条数 单选select 单选 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect> 单选+搜索+大小写不敏感 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect lay-search> 单选+搜索+大小写敏感 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect lay-search lay-case> 查看表单信息 多选select 多选 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect multiple> 简化多选 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect multiple lay-omit> 多选+搜索+大小写不敏感 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect multiple lay-search> 简化多选+搜索+大小写敏感 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltselect multiple lay-search lay-case lay-omit> 查看表单信息 赋值 // 有两种赋值方式： 1. 直接在option中写selected。 2. 通过 js 赋值。 // 1. 直接在option中写selected 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon // 2. 通过 js 赋值。 请选择您的兴趣爱好 sing1 sing2 SING1-大写 movie1 movie2 movie3 MOVIE4 swim moon &ltscript> // 手动赋值 $('select[name=\"简化多选+搜索+大小写敏感\"]').val(['sing1', 'movie2']); form.render(); &lt/script> layui.use(['form','code'], function () { var form = layui.form, $ = layui.$; // 代码块 layui.code({ title: 'html', encode: true, about: false }); // 手动赋值 $('select[name=\"简化多选+搜索+大小写敏感\"]').val(['sing1', 'movie2']); form.render(); // 提交事件 form.on(\"submit(*)\", function (data) { $('#result').html(syntaxHighlight(data.field)); layer.open({ type: 1, title: '提交信息', shadeClose: true, content:$('#result') }); return false; }); // json 格式化+高亮 function syntaxHighlight(json) { if (typeof json != 'string') { json = JSON.stringify(json, undefined, 2); } json = json.replace(/&/g, '&').replace(//g, '>'); return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function(match) { var cls = 'number'; if (/^\"/.test(match)) { if (/:$/.test(match)) { cls = 'key'; } else { cls = 'string'; } } else if (/true|false/.test(match)) { cls = 'boolean'; } else if (/null/.test(match)) { cls = 'null'; } return '' + match + ''; }); } }) L2Dwidget.init({\"log\":false,\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"pluginRootPath\":\"live2dw/\",\"tagMode\":false});"},{"title":"404 Not Found：该页无法显示","date":"2016-09-27T03:31:01.000Z","updated":"2019-08-09T10:39:08.961Z","comments":true,"path":"/404.html","permalink":"https://jiangxingye.github.io//404.html","excerpt":"","text":"很抱歉，您所访问的地址并不存在"},{"title":"About Me","date":"2019-08-09T10:10:52.000Z","updated":"2019-08-15T11:01:56.014Z","comments":true,"path":"about/index.html","permalink":"https://jiangxingye.github.io/about/index.html","excerpt":"","text":"不是啥程序员，自己利用空闲时间写点东西，有技术，也有一些岁月感悟。 毕业于吉林省万顺中学，目前在做硬件服务器这个行当。 想买的朋友，可以用下面的联系方式和我联系。 最近在看《独裁者手册》这本书。。。 联系方式 QQ : 174762929 邮箱 : 174762929@qq.com"}],"posts":[{"title":"关闭服务器CPU节能模式","slug":"关闭服务器CPU节能模式","date":"2019-08-16T09:58:37.000Z","updated":"2019-08-16T10:36:49.487Z","comments":true,"path":"2019/08/16/关闭服务器CPU节能模式/","link":"","permalink":"https://jiangxingye.github.io/2019/08/16/关闭服务器CPU节能模式/","excerpt":"","text":"OS系统总关闭P-state模式 CentOS7.x OS中使用了 IntelP-state ，导致机器BIOS关闭节电设置后，处理器的频率依旧处于频繁跳动状态。通过grub禁用Intel P-state解决OS控制处理器频率问题。操作如下： 使用root账号进入系统打开终端，两种方式， 第一种：右键 –> Open in Terminal 第二种，左上角Applications –> Utilities -> Terminal （蓝色字体部分为需要执行的命令） 在命令行执行lscpu |grep “Hz”，查看CPU是否处于额定主频（红色框中数值是否相等或非常相近，2.10GHz=2100MHz，图中明显不相等），然后执行下列命令： 将更改脚本放到/tmp/目录下。在终端执行sh change_grub.sh 如果成功，会自动重启，如果失败，会报错”更改失敗，需要手動進行更改”，请联系运维人员 主板BIOS中设置关闭节能模式 BIOS关闭节能，方法如下： 在上一步执行reboot之后会进行重启操作，过程中进入bios系统后 (按Delete键进入) CPU configuration Advanced Power Managerment Configuretion 在Power Technology 中选择Custom &amp;&amp; 返回 3．CPU P state Cotrol -> Disable &amp;&amp; 返回 4.CPU Cstat Cotrol -> Package C State Limit：C0/C1 state &amp;&amp; 返回 5.关闭QPI 总线的节能: advanced –> Chipset Configuration -> North Bridge ->QPI Configuration -> QPI General Configuretion —> LINK L0p /L1enable更改为disable 。 F4 保存退出执行重启 7、重启完成以后输入账户密码进入系统，打开终端，在命令行执行 lscpu |grep“Hz”查看CPU是否处于额定主频（下图中共色框中两个数值是否相等或非常相近，2.10GHz=2100MHz），如是说明修改成功。 change_grub.sh 脚本如下 #!/bin/sh cmd=&quot;intel_pstate=disable intel_idle.max_cstate=0 processor.max_cstate=1 idle=poll quiet&quot; check=$(cat /etc/default/grub |grep &quot;intel_pstate=disable intel_idle.max_cstate=0 processor.max_cstate=1 idle=poll&quot; | wc -l ) if [ $check -eq 0 ] then sed -i &quot;/GRUB_CMDLINE_LINUX/ s/quiet/$cmd/g&quot; /etc/default/grub else printf &quot;the file has been edited at a earlier time&quot; exit 0 fi if [ $? -ne 0 ] then printf &quot;faild,please change it by edit the file&quot; exit 1 fi grub2-mkconfig -o /boot/grub2/grub.cfg &amp;&amp; reboot","categories":[{"name":"IT技术","slug":"IT技术","permalink":"https://jiangxingye.github.io/categories/IT技术/"},{"name":"服务器问题","slug":"IT技术/服务器问题","permalink":"https://jiangxingye.github.io/categories/IT技术/服务器问题/"}],"tags":[{"name":"关闭服务器CPU节能模式","slug":"关闭服务器CPU节能模式","permalink":"https://jiangxingye.github.io/tags/关闭服务器CPU节能模式/"}]},{"title":"meiyatest","slug":"meiyatest","date":"2019-08-15T07:25:06.000Z","updated":"2019-08-15T07:26:38.718Z","comments":true,"path":"2019/08/15/meiyatest/","link":"","permalink":"https://jiangxingye.github.io/2019/08/15/meiyatest/","excerpt":"","text":"美亚CH服务器性能基准测试 硬件配置一览表 型号 内部名称 技术规格 刀片机 还原（配套智能网卡）-低配 高密多节点服务器，每U≥2节点，总高度≤4U/每节点配置:2颗英特尔至强银牌4110 CPU（2.1GHz，8核）/128G DDR4内存/1*600G 15K SAS希捷硬盘/按厂商需求配备raid（有些品牌不配raid没法识别硬盘）/至少配备2个千兆网口，1个独立MGMT带外管理口（支持远程KVM功能)/预留至少1个半高半长pcie3.0*8网卡的插槽（长167mm，高68mm,厚16mm）/支持CentOS7.3，同时支持更高版本/带导轨/机箱冗余电源/备注功耗 还原（配套智能网卡）-中配 高密多节点服务器，每U≥2节点，总高度≤4U/每节点配置：2颗英特尔至强银牌4114 CPU（2.2GHz，10核）/256G DDR4内存/1*600G 15K SAS希捷硬盘/按厂商需求配备raid（有些品牌不配raid没法识别硬盘）/至少配备2个千兆网口，1个独立MGMT带外管理口（支持远程KVM功能/预留至少1个半高半长pcie3.0*8网卡的插槽（长167mm，高68mm,厚16mm）/支持CentOS7.3，同时支持更高版本/带导轨/机箱冗余电源/备注功耗 还原（配套智能网卡）-高配 高密多节点服务器，每U≥2节点，总高度≤4U/每节点配置为：2颗英特尔至强金牌6126 CPU（2.6GHz，12核）/512G DDR4内存/1*600G 15K SAS希捷硬盘/按厂商需求配备raid（有些品牌不配raid没法识别硬盘）/至少配备2个千兆网口，1个独立MGMT带外管理口（支持远程KVM功能）/预留至少1个半高半长pcie3.0*8网卡的插槽（长167mm，高68mm,厚16mm）/支持CentOS7.3，同时支持更高版本/带导轨/机箱冗余电源/备注功耗 索引服务器 索引 2U服务器/2颗英特尔至强银牌4110 CPU（2.1GHz，8核）/64G DDR4/8*900G SAS 10000rpm/ Raid0、1、5、6（1G缓存带超级电容）/双万兆和双千兆网口，不配万兆光模块（要求都是Intel的网卡，并且千兆支持支持IGB驱动，igb-3.2.10、igb-3.4.7、igb-5.1.2 这些版本都可以，万兆支持IXGBE驱动）、1个独立带外管理端口（支持远程KVM）/支持CentOS7.3，同时支持更高版本/带导轨，单电源/ 存储服务器 存储 2U服务器/2颗英特尔至强银牌4110 CPU（2.1GHz，8核）/128G DDR4/12*8T SATA 7200RPM/Raid0,1,5,6（1G或以上缓存，带超级电容，支持12个硬盘做1组Raid6）/每服务器双万兆和双千兆网口，不配万兆光模块（要求都是Intel的网卡，并且千兆支持支持IGB驱动，igb-3.2.10、igb-3.4.7、igb-5.1.2 这些版本都可以，万兆支持IXGBE驱动），1个独立MGMT带外管理口（支持远程KVM功能）/支持CentOS7.3及以上版本/带导轨，单电源/要求使用希捷企业级热插拔服务器硬盘/ 系统安装要求出厂预安装:做好raid5、划分VD、安装Centos 7.364位、安装图形化界面等操作。（避免现场安装失败问题） 1、刀片机 ：直接安装系统，无需做raid，按厂商需求配备raid（有些品牌不配raid没法识别硬盘）； 2、SOLR : raid5，划分2个VD （VD0 ：600G VD1 ：剩余空间 ，挂载为/data） 3、HBase : raid5，划分2个VD （VD0 ：600G VD1 ：16T ，挂载为/data,其余空间不用挂载） 测试环境准备准备工作 以下要求适用于sorl、存储的CentOS V7.3及以上版本的服务器。 操作系统参数 vi /etc/security/limits.conf * hard nofile 1000000 * soft nofile 1000000 * hard nproc 409600 * soft nproc 409600 vi /etc/security/limits.d/20-nproc.conf * soft nproc 409600 echo 0 > /proc/sys/vm/swappiness; echo vm.swappiness=0 >> /etc/sysctl.conf 设置linux内核参数： vi /etc/sysctl.conf net.core.somaxconn = 8192 net.ipv4.tcp_max_syn_backlog = 8192 net.ipv4.tcp_synack_retries = 2 net.ipv4.tcp_syn_retries = 2 net.ipv4.tcp_timestamps = 0 net.ipv4.tcp_window_scaling = 1 net.core.rmem_max = 16777216 net.core.wmem_max = 16777216 net.ipv4.tcp_rmem = 4096 87380 16777216 net.ipv4.tcp_wmem = 4096 87380 16777216 kernel.pid_max = 200000 vm.max_map_count = 400000 并执行： sysctl -p 禁用SELINUX { 或 /etc/sysconfig/selinux disabled } vi /etc/selinux/config SELINUX=disabled 并执行： setenforce 0 禁用iptables systemctl stop firewalld #关闭防火墙 systemctl disable firewalld #禁止开机启动 HBase: gcc-c++安装 CentOS7.3 gcc-c++ 将依赖的包放在ee文件夹上传到/opt目录或者从系统盘中安装 cd /opt/ee 执行如下操作： rpm -ivh glibc-common-2.17-157.el7.x86_64.rpm rpm -ivh kernel-headers-3.10.0-514.el7.x86_64.rpm rpm -ivh libgcc-4.8.5-11.el7.x86_64.rpm rpm -ivh libgcc-4.8.5-11.el7.i686.rpm rpm -ivh glibc-2.17-157.el7.x86_64.rpm rpm -ivh mpfr-3.1.1-4.el7.x86_64.rpm rpm -ivh libgomp-4.8.5-11.el7.x86_64.rpm rpm -ivh nscd-2.17-157.el7.x86_64.rpm rpm -ivh glibc-headers-2.17-157.el7.x86_64.rpm rpm -ivh glibc-devel-2.17-157.el7.x86_64.rpm rpm -ivh libstdc++-4.8.5-11.el7.x86_64.rpm rpm -ivh libstdc++-devel-4.8.5-11.el7.x86_64.rpm rpm -ivh libmpc-1.0.1-3.el7.x86_64.rpm rpm -ivh cpp-4.8.5-11.el7.x86_64.rpm rpm -ivh gcc-4.8.5-11.el7.x86_64.rpm rpm -ivh gcc-c++-4.8.5-11.el7.x86_64.rpm [\\@more\\@] gcc -v （查看是否安装成功） [root\\@localhost ee]# gcc -v Using built-in specs. COLLECT_GCC=gcc COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper Target: x86_64-redhat-linux Configured with: ../configure –prefix=/usr –mandir=/usr/share/man–infodir=/usr/share/info –with-bugurl=http://bugzilla.redhat.com/bugzilla–enable-bootstrap –enable-shared –enable-threads=posix–enable-checking=release –with-system-zlib –enable-__cxa_atexit–disable-libunwind-exceptions –enable-gnu-unique-object–enable-linker-build-id –with-linker-hash-style=gnu–enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto –enable-plugin–enable-initfini-array –disable-libgcj–with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install–with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install–enable-gnu-indirect-function –with-tune=generic –with-arch_32=x86-64–build=x86_64-redhat-linux Thread model: posix gcc version 4.8.5 20150623 (Red Hat 4.8.5-11) (GCC) (说明安装成功) JDK安装 cd /usr/local 将jdk1.7.0_25.tar.gz放在/usr/local解压. ln -s /usr/local/jdk1.7.0_25/ /usr/local/java7 vi /etc/profile 添加： export JAVA_HOME=/usr/local/java7 export PATH=\\$JAVA_HOME/bin:\\$PATH export HADOOP_HOME=/usr/local/hadoop export PATH=\\$HADOOP_HOME/bin:\\$PATH export HBASE_HOME=/usr/local/hbase export PATH=\\$HBASE_HOME/bin:\\$PATH 并执行： source /etc/profile FIO测试1、fio安装fio-2.1.10.tar.gz解压至/usr/local/ cd /usr/local tar zxvf fio-2.1.10.tar.gz cd fio-2.0.7makemake install fio测试 2、还原机FIO随机写50MB ，bs 2k fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=randwrite-ioengine=psync -bs=2k -size=50MB -numjobs=30 -runtime=300 -group_reporting-name=mytest 随机写1G ，bs 4k fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=randwrite-ioengine=psync -bs=4k -size=1G -numjobs=30 -runtime=300 -group_reporting-name=mytest 顺序读50M ，bs 2k fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=read -ioengine=psync-bs=2k -size=50MB -numjobs=30 -runtime=300 -group_reporting -name=mytest 顺序读1G ，bs 4k fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=read -ioengine=psync-bs=4k -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest 3、索引FIO顺序写500MB ，bs 512k fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest 顺序写1G，bs 1MB fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest 随机读500MB ，bs 512k fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest 随机读1G ，bs 1MB fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest 4、存储FIO顺序写500MB ，bs 512k fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest 顺序写1G，bs 1MB fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest 随机读500MB ，bs 512k fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest 随机读1G ，bs 1MB fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest 索引基准测试SOLR安装solrs.tar 解压至/usr/local/ tar xvf solrs.tar solrs_data.tar 解压至/data tar xvf solrs_data.tar 将数据解压至/datascp ip:/home/benchmark_solr.tar /data cd /data tar xvf benchmark_solr.tar solr基准测试启动solr killall java; /data/benchmark/solrs/yk/bin/startup.sh 清空系统缓存 echo 3 > /proc/sys/vm/drop_caches 验证http://**ip**:8900/solr/yk/select?q=\\*%3A\\*&amp;wt=json&amp;indent=true确保访问正常，返回如下结果 登录任意一台服务器（如：172.16.20.159，与solr服务器同一网段），安装perl环境（perl为系统盘对应的版本） 将benchmark.tar.gz文件解压到/opt目录后执行如下操作： cd /opt/benchmark/solr/ 修改benchmark.perl一些参数配置： forkCount:并发数 测试并发数为：100 queryCount:查询次数 测试并发数为：1000 urlHost：目标主机ip 根据实际SOLR服务器的ip配置 执行benchmark文件：perl benchmark.perl，运行结果： Req/s:(每秒请求数) Avg:平均耗时 Median:中间耗时 95th:95%的查询耗在2.604范围 99th:99%的查询耗时在5.498范围 Max：最大耗时 存储基准测试1、主机名配置vi /etc/sysconfig/network 并执行hostname HBase-01 2、主机名查询静态表配置 3、snappy安装snappy-1.1.2.tar.gz解压至/opt/下 cd /opt; tar zxvf snappy-1.1.2.tar.gz cd /snappy-1.1.2 ./configure make make install 4、ssh无密码登陆ssh-keygen -t rsa （回车到底） cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys 5、hadoop安装 解压hadoop.tar至/usr/local/ tar xvf hadoop.tar ln -s /usr/local/hadoop-1.0.3/ /usr/local/hadoop ln -s /usr/local/hbase-0.94.1/ /usr/local/hbase 6、hadoop启动killall -s 9 java rm -rf /data/hadoop/ hadoop namenode -format start-all.sh 7、hadoop验证 查看http://172.16.20.232:50070/dfshealth.jsp页面，确保访问正常，同时 DeadNodes为0 执行jps命令,确保有以下的进程 9、HBase基准测试测试工具（yscb安装） mkdir -p /opt/benchmark/hbase/; 解压yscb至/opt/benchmark/hbase/ cd /opt/benchmark/hbase/ tar zxvf ycsb-0.1.4.tar.gz 10、HBase启动清空系统缓存: echo 3 > /proc/sys/vm/drop_caches killall -s 9 java rm -rf /data/hadoop/ hadoop namenode -format start-dfs.sh start-hbase.sh 11、HBase验证 查看http://172.16.20.232:60010/master-status页面，确保访问正常，同时没有DeadRegion Servers 执行jps命令,确保有以下的进程： 12、HBase基准测试创建hbase表 echo “create ‘usertable’,’f1’,’f2’,’f3’”|hbase shell 查看表是否已经创建 echo list|hbase shell 清空系统缓存: echo 3 > /proc/sys/vm/drop_caches cd /opt/benchmark/hbase/ycsb-0.1.4/bin; 执行插入测试，创建100个线程,插入100w条记录： ./ycsb load hbase -P ../workloads/workloada -p threads=100 -pcolumnfamily=f1 -p recordcount=1000000 -s > load.dat 测试结果存取在load.dat中,查看load.dat有如下结果 grep -v -E ‘UPDATE|CLEANUP’ load.dat|more Runtime:执行时间(ms) Throughput(ops/sec):吞吐量(每秒操作次数) Operations：操作总数 AverageLatency：平均耗时(us) MinLatency:最小耗时(us) MaxLatency:最大耗时(us) 95thPercentileLatency(ms):95%的执行时间范围 99thPercentileLatency(ms):99%的执行时间范围 执行事务操作(95%的读操作 5%的写操作) 创建100个线程,操作100w次 ./ycsb run hbase -P ../workloads/workloadb -threads 100 -pmeasurementtype=timeseries -p columnfamily=f1 -p operationcount=1000000 -ptimeseries.granularity=2000 > transactions.dat 测试结果存取在transactions.dat中 查看更新操作测试结果 grep UPDATE transactions.dat 查看读取操作测试结果 grep READ transactions.dat NMON监控在做SOLR或HBase基准测试时，使用nmon监控服务器的CPU、内存、磁盘资源使用情况 1、安装nmon 解压nmon至/usr/local/ cd /usr/local tar zxvf nmon.tar.gz 2、修改nmon参数 cd nmon vi nmon_start.sh 修改频率为10秒一次，监控5000次： 3、运行nmon 做基准测试同时，运行nmon，监控测试时的硬件资源使用情况 ./nmon_start.sh 同一目录下会生成nmon文件 4、关掉nmon 基准测试结束时，停掉nmon Killall nmon 5、生成图形化结果 打开nmon analyser v34a.xls，点击Analyse nmon data按键，加载nmon文件，生成图形化结果：","categories":[{"name":"IT技术","slug":"IT技术","permalink":"https://jiangxingye.github.io/categories/IT技术/"},{"name":"服务器问题","slug":"IT技术/服务器问题","permalink":"https://jiangxingye.github.io/categories/IT技术/服务器问题/"}],"tags":[{"name":"美亚测试机要求","slug":"美亚测试机要求","permalink":"https://jiangxingye.github.io/tags/美亚测试机要求/"}]},{"title":"苏联解体的启示","slug":"苏联解体的启示","date":"2019-08-12T11:15:19.000Z","updated":"2019-08-12T11:31:29.652Z","comments":true,"path":"2019/08/12/苏联解体的启示/","link":"","permalink":"https://jiangxingye.github.io/2019/08/12/苏联解体的启示/","excerpt":"","text":"从1989春至1991年底，短短两年，人类历史上最强大的专政机器——苏联东欧红色帝国土崩瓦解。这是二十世纪最伟大的故事。 一个皇朝的解体，一般可以概括为：“生于不义，死于耻辱。” 皇朝倒台前会有几个特点： 货币急速贬值，老百姓爱做梦。 美国当年成立特殊金融小组制裁前苏联，导致苏联解体。 表面强大的前苏联，就这样既无外敌入侵，又没有天灾，自己就玩不下去了，就解体了。 朝鲜经济短时间内很难稳定，楼市、基建、政府各种债务出清，国有资产私有化， 区域自治的各地关税统一等等，这些问题牵扯到的利益博弈将是及其复杂， 没有十几年的争吵很难达成统一，毕竟是各方都有选票，财富无论怎么划分， 都会有人不满意，这就注定了未来朝鲜金融系统将会长期动荡。 总之，生活在百姓无知，爱做梦的国家，挺难的，不确定性太大。","categories":[{"name":"读书","slug":"读书","permalink":"https://jiangxingye.github.io/categories/读书/"},{"name":"历史","slug":"读书/历史","permalink":"https://jiangxingye.github.io/categories/读书/历史/"}],"tags":[{"name":"苏联解体","slug":"苏联解体","permalink":"https://jiangxingye.github.io/tags/苏联解体/"}]},{"title":"severinfo","slug":"severinfo","date":"2019-08-12T07:09:02.000Z","updated":"2019-08-12T07:21:25.200Z","comments":true,"path":"2019/08/12/severinfo/","link":"","permalink":"https://jiangxingye.github.io/2019/08/12/severinfo/","excerpt":"","text":"型号 主板 RAM HDD PCIE Others PR2510G PR","categories":[{"name":"IT技术","slug":"IT技术","permalink":"https://jiangxingye.github.io/categories/IT技术/"},{"name":"服务器","slug":"IT技术/服务器","permalink":"https://jiangxingye.github.io/categories/IT技术/服务器/"}],"tags":[{"name":"服务器信息","slug":"服务器信息","permalink":"https://jiangxingye.github.io/tags/服务器信息/"}]},{"title":"如何在服务器的BIOS中设置上电自启动","slug":"如何在服务器的BIOS中设置上电自启动","date":"2019-08-12T06:36:33.000Z","updated":"2019-08-12T06:47:17.767Z","comments":true,"path":"2019/08/12/如何在服务器的BIOS中设置上电自启动/","link":"","permalink":"https://jiangxingye.github.io/2019/08/12/如何在服务器的BIOS中设置上电自启动/","excerpt":"","text":"说明： 1、为什么要实现这种功能，很多时候在民间都基本用普通PC来做小型服务器，公司的私服等等，而这些普通PC在民用电环境中经常会停电，一停就会导致服务器不能自动来电重启，所以这个功能来点开机是必须的。 2、普通PC基本都是以下这些配置方式，但不要和服务器主板做比较，服务器主板有专业的配置选项以及专业的来电自动启动设备。 下面根据不同的BIOS列出相应的设置方法： 1：首先进入BIOS的设置主界面，选择[POWER MANAGEMENT SETUP]，再选择[PWR Lost Resume State]，这一项有三个选择项。 选择[Keep OFF]项，代表停电后再来电时，电脑不会自动启动。 选择[Turn On]项，代表停电后再来电时，电脑会自动启动。 选择的[Last State]，那么代表停电后再来电时，电脑恢复到停电前电脑的状态。断电前如果电脑是处于开机状态，那么来电后就会自动开机。断电前是处于关机状态，那么来电后电脑不会自动开机。 2：首先进入Power Management Setup（电源管理设定）→Power Again（再来电状态），此项决定了开机时意外断电之后，电力供应恢复时系统电源的状态。设定值有：Power Off（保持系统处于关机状态）Power On（保持系统处于开机状态）Last State（恢复到系统断电前的状态）进入挂起/睡眠模式，但若按钮被揿下超过4秒，机器关机。若想来电自动开机把上面的这项改成power on就行了！ 3：有的BIOS中[POWER MANAGEMENT SETUP]没有上面说的[PWR Lost Resume State]，可以在[PWRON After PWR-Fail]→[Integrated Peripherals]选项中找到两个选项：ON(打开自动开机)和OFF(关闭自动开机)，设置为OFF即可。不同的主板及BIOS型号相对应的选项会有所不同，但我想应该会差不多，一般都在[POWER MANAGEMENT SETUP]这个选项中可以找到相应的设置选项！","categories":[{"name":"IT技术","slug":"IT技术","permalink":"https://jiangxingye.github.io/categories/IT技术/"},{"name":"服务器问题","slug":"IT技术/服务器问题","permalink":"https://jiangxingye.github.io/categories/IT技术/服务器问题/"}],"tags":[{"name":"如何在服务器的BIOS中设置上电自启动","slug":"如何在服务器的BIOS中设置上电自启动","permalink":"https://jiangxingye.github.io/tags/如何在服务器的BIOS中设置上电自启动/"}]},{"title":"raid丢失系统恢复案例","slug":"raid丢失系统恢复案例","date":"2019-08-12T04:31:04.000Z","updated":"2019-08-12T06:31:39.327Z","comments":true,"path":"2019/08/12/raid丢失系统恢复案例/","link":"","permalink":"https://jiangxingye.github.io/2019/08/12/raid丢失系统恢复案例/","excerpt":"","text":"How to fix “No Bootable Device” issue on server?故障现象： 原因分析：客户机器有独立的RAID卡，2块物理磁盘做的RAID0，和客户沟通，RAID卡进去状态不正常，不想重新安装系统。因为上面的环境配置很麻烦。 处理过程： 重新在RAID卡里做同级别RAID的话，不在raid里做clear操作的话，数据不丢失的话，理论上系统是有办法恢复的，如果数据会消失，那就要重做了。经验证，做同级别RAID系统恢复，数据并未消失。 问题解决： 建议： 如果系统上有重要数据的话，还是建议使用RAID1会安全一些。 如果你忙觉得上述案例帮助了您，给个赞哦，当然也可以打赏杯可乐，我就不用喝酱油兑水了,^_^ 么么哒！ 服务器购买也可以通过下面的联系方式向我咨询。","categories":[{"name":"IT技术","slug":"IT技术","permalink":"https://jiangxingye.github.io/categories/IT技术/"},{"name":"服务器问题","slug":"IT技术/服务器问题","permalink":"https://jiangxingye.github.io/categories/IT技术/服务器问题/"}],"tags":[{"name":"bootable device were deteced.","slug":"bootable-device-were-deteced","permalink":"https://jiangxingye.github.io/tags/bootable-device-were-deteced/"}]},{"title":"[记]《知识分子的不幸》-王小波","slug":"misfortune-intellectual","date":"2019-06-09T13:31:09.000Z","updated":"2019-08-09T10:39:09.050Z","comments":true,"path":"2019/06/09/misfortune-intellectual/","link":"","permalink":"https://jiangxingye.github.io/2019/06/09/misfortune-intellectual/","excerpt":"","text":"前言这篇文章发表于1996年第二期《东方》杂志，同样收录于《沉默的大多数》一书中。 所想文章一开头就抛出了一个问题：什么是知识分子最害怕的事？想起了高晓松在晓说中提到过这个问题，晓松肯定是看过这篇文章的。 王小波说：“知识分子最怕活在不理智的年代。”所谓不理智的年代，就是伽利略低头认罪，承认地球不转的年代，也是拉瓦斯上断头台的年代；是茨威格服毒自杀的年代，也是老舍跳太平湖的年代。“ 王小波和他的美国老师谈论了一个问题：”有信仰比无信仰要好。“，由于王小波是经历过文革的，所以王小波一开始是抵触这种思想的，尤其是 课间祷告 让王小波想起了文革中的 早请示。但老师最终说服了他，“不管是信神，还是自珍自重，人活在世界上总得有点信念才成。就我个人而言，虽是无神论者，我也有个人操守，从不逾越。” 国内的学者，只搞学术研究，不搞意识形态，这由不了自己。有朝一日它成了意识形态，你的话就是罪状。言论不自由，不理智，民族狂热，这不就是知识分子最怕的事情吗？ 王小波崇拜墨子：其一，他思维缜密，其二，他敢赤裸裸地谈利害。（有了他，我也敢说自己是中华民族的赤诚分子，不怕国学家说我是全盘西化了。） 营造意识形态则是灭绝思想额丰饶。中国的人文知识分子，有种以天下为己任的使命感，总觉得自己该搞出些老百姓当信仰的东西。 国学，这种东西实在厉害。最可怕之处就在于那个“国”字。顶着这个字，谁敢有不同意见？抢到了这个制高点，就可以压制一切不同意见；所以很容易落入思想流氓的手中变成一种凶器。 目前正值 “中美贸易战”，各种自媒体为了点击量、关注度。煽动民族狂热情绪，导致民众根本容不得半点不同意见，不讲道理，“盲目爱国“。 认真思索，真诚的明辨是非，有这种态度大概就可算是善良了吧。 人活在世上，自会形成信念，一种学问、一本书，假如不对我的价值观发生变化，就不值得一学，不值得一看。","categories":[{"name":"读书","slug":"读书","permalink":"https://jiangxingye.github.io/categories/读书/"},{"name":"阅读笔记","slug":"读书/阅读笔记","permalink":"https://jiangxingye.github.io/categories/读书/阅读笔记/"}],"tags":[{"name":"reading","slug":"reading","permalink":"https://jiangxingye.github.io/tags/reading/"}]},{"title":"人们在一本叫《活着》的书中纷纷死去","slug":"to-live","date":"2019-05-02T09:46:16.000Z","updated":"2019-08-09T10:39:09.051Z","comments":true,"path":"2019/05/02/to-live/","link":"","permalink":"https://jiangxingye.github.io/2019/05/02/to-live/","excerpt":"","text":"有那么一个年代，离我们很近，它腥风血雨，连活着都是一件奢侈的事。 在富贵的一生中，每次出现看似被上天眷顾的福气后（如有庆长跑第一、凤霞嫁了人并怀了孩子），读者还在替富贵开心的时候，他们却以各种方式迅速死去，最终富贵亲手埋葬了他所有的亲人。 一本 12w 左右的小说，但是在没有华丽词藻的情况下，在顺畅流利的写作手法、跌宕起伏的剧情、第一人称的代入感下一口气读完了。期间多次痛哭流涕（一点儿没夸张），不得不放下书本，洗过脸后才能继续阅读。所以已经多年没写书评的我，还是忍不住为她写下书评。 人是为了活着本身而活着，而不是为了活着之外的任何事物所活着。 这是作者在中文序言中的一句话，在当今生活着的我，初读序言中的这句话，并无任何共鸣，甚至还行吐槽两句。随着富贵将他的”一生”娓娓道来，你就会明白在那样的时代背景下，活着已经是一件不容易的事。 所以作者在日文版序言中说到： 在旁人眼中富贵的一生是苦熬的一生；可是对于富贵自己，我相信他更多地感受到了幸福。 因为他相信自己的妻子是世上最好的妻子，他相信自己的子女也是世上最好的子女，还有他的女婿他的外孙，还有他的那头也叫富贵的牛，还有一起上火锅的朋友们，还有生活的点点滴滴…… 富贵的真是一路跌下去的一生，从”富家少爷”赌光了家产、气死了爹爹。由于母亲生病，为母亲求医路上被国民党抓壮丁，被俘虏后，放回家中。却发现母亲已死，女儿也由于生病变成了聋哑人。本想着大难之后必有后福，却只是悲惨一生的开端。儿子有庆由于和县长夫人血型匹配，遭抽血而亡、女儿凤霞产子大出血而亡、妻子家珍失去儿女后，失去了最后与病魔争斗的信念，也走了、女婿二喜在工地被水泥板拍死、外孙苦根难得吃到豆子，却被豆子撑死。最后只剩下自己和一个也叫作富贵的老牛。 春生想自杀前，找到富贵告别，在被家珍原谅，并答应不会自杀，在这种情况下坚持了一个月，最终还是自杀了。那种时代背景下的无奈，那种窒息感。。。 富贵的一生跨越了地主、解放战争、人民公社运动、大炼钢铁、自然灾害和文化大革命，从一个人的视角看到每个时代下的一个小小的缩影，但却比任何其他的描述更让人深刻了解到这些时代背景下人们的生活状态。 在那时，活着不仅是幸运，也更需要勇气。","categories":[{"name":"读书","slug":"读书","permalink":"https://jiangxingye.github.io/categories/读书/"},{"name":"阅读笔记","slug":"读书/阅读笔记","permalink":"https://jiangxingye.github.io/categories/读书/阅读笔记/"}],"tags":[{"name":"reading","slug":"reading","permalink":"https://jiangxingye.github.io/tags/reading/"},{"name":"活着","slug":"活着","permalink":"https://jiangxingye.github.io/tags/活着/"}]},{"title":"reading-list","slug":"reading-list","date":"2017-01-31T07:29:32.000Z","updated":"2019-08-11T08:38:26.909Z","comments":true,"path":"2017/01/31/reading-list/","link":"","permalink":"https://jiangxingye.github.io/2017/01/31/reading-list/","excerpt":"下面是一些我读过的书","text":"下面是一些我读过的书★ ★ ★ ★ ☆ ☆ ☆ ：推荐指数，7星制。此乃余之私见，或显偏薄。 文学小说 《棋王 树王 孩子王》 by 阿城 2015年9月 ★ ★ ★ ★ ☆ ☆ ☆ 《达芬奇密码》 by 丹.布朗 2015年9月 ★ ★ ★ ★ ★ ★ ☆ 《追风筝的人》 by 卡勒德·胡赛尼 2016年6月 ★ ★ ★ ★ ★ ☆ ☆ 《霍乱时期的爱情》 by 加西亚·马尔克斯 2016年8月 ★ ★ ★ ★ ★ ☆ ☆ 《查令十字街84号》 by 海莲·汉芙 2016年9月 ★ ★ ★ ★ ☆ ☆ ☆ 《围城》 by 钱钟书 2017年1月 ★ ★ ★ ★ ★ ☆ ☆ 《一个陌生女人的来信》 by 茨威格 2017年1月 ★ ★ ★ ★ ★ ★ ☆ 《一颗心的沦亡》 by 茨威格 2017年1月 ★ ★ ★ ★ ☆ ☆ ☆ 《情感的迷茫》 by 茨威格 2017年1月 ★ ★ ★ ★ ★ ☆ ☆ 《一个女人一生中的二十四个小时》 by 茨威格 2017年1月 ★ ★ ★ ★ ☆ ☆ ☆ 《摆渡人》 by 克莱尔·麦克福尔 2019年3月28 ★ ☆ ☆ ☆ ☆ ☆ ☆ 《悟空传》 by 今何在 2016年8月 ★ ★ ★ ★ ★ ☆ ☆ 《岛上书店》 by 加·泽文 2019年4月 ★ ★ ★ ★ ☆ ☆ ☆ 《月亮与六便士》 by 毛姆 2019年4月 ★ ★ ★ ★ ★ ☆ ☆ 《活着》 by 余华 2019年5月★ ★ ★ ★ ★ ★ ☆ 旅行 《不去会死》 by 石田裕辅 2017年2月 ★ ★ ★ ☆ ☆ ☆ ☆ 历史 《秦迷·秦始皇的秘密》 by 李开元 2016年3月 ★ ★ ★ ★ ☆ ☆ ☆ 《鱼羊野史·第1卷》 by 高晓松 2016年9月 ★ ★ ★ ★ ★ ☆ ☆ 心理学 《天才在左，疯子在右》 by 高铭 2016年3月 ★ ★ ★ ★ ★ ★ ☆ 经济 《历代经济变革得失》 by 吴晓波 2017年2月 ★ ★ ★ ★ ★ ★ ☆ 科幻 《球状闪电》 by 刘慈欣 2016年3月 ★ ★ ★ ★ ☆ ☆ ☆ 《三体·“地球往事”三部曲之一》 by 刘慈欣 2016年4月 ★ ★ ★ ★ ★ ☆ ☆ 《流浪地球》 by 刘慈欣 2019年3月 ★ ★ ★ ★ ☆ ☆ ☆ 创业 《从零到一》 by 彼得·蒂尔 2015年6月 ★ ★ ★ ★ ☆ ☆ ☆ 《创业维艰》 by 本·霍洛维茨 2015年6月 ★ ★ ★ ★ ★ ☆ ☆ 《餐巾纸上的创业课》 by 神田昌典 2016年6月 ★ ★ ★ ★ ☆ ☆ ☆ 方法论 《如何高效学习》 by 斯科特·扬 2017年1月 ★ ★ ★ ★ ★ ☆ ☆ 《DISCover自我探索》 by 李海峰 2017年1月 ★ ★ ★ ★ ★ ★ ☆ 计算机 《淘宝技术这十年》 by 子柳 2015年6月 ★ ★ ★ ★ ★ ☆ ☆ 待读/在读 《基督山伯爵》 by 大仲马","categories":[{"name":"读书","slug":"读书","permalink":"https://jiangxingye.github.io/categories/读书/"},{"name":"书单","slug":"读书/书单","permalink":"https://jiangxingye.github.io/categories/读书/书单/"}],"tags":[{"name":"reading","slug":"reading","permalink":"https://jiangxingye.github.io/tags/reading/"}]},{"title":"人生若只如初见-《围城》","slug":"Fortress-Besieged","date":"2017-01-03T03:27:04.000Z","updated":"2019-08-09T10:39:09.053Z","comments":true,"path":"2017/01/03/Fortress-Besieged/","link":"","permalink":"https://jiangxingye.github.io/2017/01/03/Fortress-Besieged/","excerpt":"婚姻是被围困的城堡，城外的人想冲进去，城里的人想逃出来 –法国谚语","text":"婚姻是被围困的城堡，城外的人想冲进去，城里的人想逃出来 –法国谚语 方鸿渐对于鲍小姐，不堪抵抗；对于苏小姐的垂青，已再纠缠不清（导致方唐感情破裂的导火索）；最后与孙柔嘉的婚姻，因属于现实的无奈吧；至于唐晓芙，方对她应该有着最纯粹的爱意。 整部小说给我留下深刻印象的就是唐小姐，她在整部小说的占比是非常少的。 总而言之，唐小姐是摩登文明社会里的那桩罕物――一个真正的女孩子。有许多都市女孩子已经是装模作样的早熟的女人，算不得孩子；有许多女孩子只是浑沌痴顽的无性别的孩子，还说不上女人。 唐晓芙的聪明漂亮、活泼可爱，令方鸿渐一见倾心。 当初，是苏小姐的干预，激起了唐晓芙的逆反心理，不让接近我偏接近，书信往来，见面谈话，时间推移，俩人都投入了真正的感情。 作为苏的姐妹，唐晓芙骨子里也有跟苏小姐的高傲。 方先生的过去太丰富了！我爱的人，我要能够占领他整个生命，他在碰见我以前，没有过去，留着空白等待我—— 方下定决心写信给苏撇清两人关系，苏的狭隘的心理从中挑拨导致方与唐之间的破裂 他象一个受了责骂的孩子那样，泪水在眼睛里打转，却一句话也说不出口。 所以当唐得知方的一些列斑斑劣迹后，愈心痛愈心恨，最后一次见方，连珠炮的发问，又恨方鸿渐为什么不辩护，她的心溶成了苦水。而方鸿渐的悲剧在于，他再次懦弱，该辩解时不辩解，该在屋外多淋雨时而过早走开，接到电话后，不问来人就大声呵斥，俩人都是好面子的人，看不到俩人为这段感情而去采取任何补救措施，而是各自松开了手。两人年轻，都不知退让，任彼此失之交臂。 从此直到最后，唐也没有再次出现。 但唐给我们的留下了一个近乎完美的形象，正是因为她没有和方走在一起，没有真实世俗的一面，才能留下那种只如初见的模样。 生活亦是如此，我们心目中的“女神”、“男神”，完美无缺的人，是那些我们曾经追求不得的人。想想若是得之，经过世俗的一面，ta的完美的形象，还会在你的心中站的稳吗。 唐晓芙这个角色是钱老钟爱的角色，是钱老心中完美的女性形象，简单说就是女神！是围城里任何男人都配不上的，所以不舍得把她许配给任何人。 –杨绛先生 《围城》写出了婚姻的一方面，但不是全部，很多人要冲进这座城，自有其道理，城中有争吵，但更有温情。愿诸位在现实生活中，相互欣赏，相敬如宾，如初见一样，相互爱戴，生活一定更加美好 在新春佳节祝大家幸福美满，阖家欢乐。","categories":[{"name":"读书","slug":"读书","permalink":"https://jiangxingye.github.io/categories/读书/"},{"name":"阅读笔记","slug":"读书/阅读笔记","permalink":"https://jiangxingye.github.io/categories/读书/阅读笔记/"}],"tags":[{"name":"reading","slug":"reading","permalink":"https://jiangxingye.github.io/tags/reading/"}]}]}