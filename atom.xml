<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>姜兴业非官方网站</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jiangxingye.github.io/"/>
  <updated>2019-09-02T02:18:11.055Z</updated>
  <id>https://jiangxingye.github.io/</id>
  
  <author>
    <name>姜兴业</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Class Schedule</title>
    <link href="https://jiangxingye.github.io/2019/09/02/Class%20Schedule/"/>
    <id>https://jiangxingye.github.io/2019/09/02/Class Schedule/</id>
    <published>2019-09-02T02:08:40.000Z</published>
    <updated>2019-09-02T02:18:11.055Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="观音山小学1年5班课程表-amp-作息时间表"><a href="#观音山小学1年5班课程表-amp-作息时间表" class="headerlink" title="观音山小学1年5班课程表&amp;作息时间表"></a>观音山小学1年5班课程表&amp;作息时间表</h1><p><img src="/2019/09/02/Class Schedule/jiangsijia\课程表.jpg" alt></p><p><img src="/2019/09/02/Class Schedule/jiangsijia\作息时间表.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="教育" scheme="https://jiangxingye.github.io/categories/%E6%95%99%E8%82%B2/"/>
    
    
      <category term="作息时间表" scheme="https://jiangxingye.github.io/tags/%E4%BD%9C%E6%81%AF%E6%97%B6%E9%97%B4%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>关闭服务器CPU节能模式</title>
    <link href="https://jiangxingye.github.io/2019/08/16/%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1%E5%99%A8CPU%E8%8A%82%E8%83%BD%E6%A8%A1%E5%BC%8F/"/>
    <id>https://jiangxingye.github.io/2019/08/16/关闭服务器CPU节能模式/</id>
    <published>2019-08-16T09:58:37.000Z</published>
    <updated>2019-08-22T08:07:07.421Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><strong>OS系统总关闭P-state模式</strong></p></blockquote><p>CentOS7.x OS中使用了 Intel<br>P-state ，导致机器BIOS关闭节电设置后，处理器的频率依旧处于频繁跳动状态。通过grub禁用<br>Intel P-state解决OS控制处理器频率问题。操作如下：</p><p>使用root账号进入系统打开终端，两种方式，</p><p>第一种：右键 –> Open in Terminal</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/57a36bd3fe871535772594e357e28704.png" alt></p><p>第二种，左上角Applications –> Utilities -> Terminal</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/9511a917506a6dfb5c22f0e5350b1da1.png" alt></p><p>（蓝色字体部分为需要执行的命令）</p><p>在命令行执行lscpu |grep “Hz”，<br>查看CPU是否处于额定主频（红色框中数值是否相等或非常相近，2.10GHz=2100MHz，图中明显不相等），然后执行下列命令：</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/2a813e4dc8d1dede7d408438c47c8260.png" alt></p><ol><li>将更改脚本放到/tmp/目录下。在终端执行sh change_grub.sh</li><li>如果成功，会自动重启，如果失败，会报错”更改失敗，需要手動進行更改”，请联系运维人员</li></ol><p><strong>主板BIOS中设置关闭节能模式</strong></p><p>BIOS关闭节能，方法如下：</p><p>在上一步执行reboot之后会进行重启操作，过程中进入bios系统后 (按Delete键进入)</p><ol><li>CPU configuration Advanced Power Managerment Configuretion</li></ol><p><img src="/2019/08/16/关闭服务器CPU节能模式/6ffb5cf18e02252d2a9134b6a884ae07.png" alt></p><ol><li>在Power Technology 中选择Custom &amp;&amp; 返回</li></ol><p><img src="/2019/08/16/关闭服务器CPU节能模式/02bb1d016ef0a65ba5260b74c1fcaa0a.png" alt></p><p>3．CPU P state Cotrol -> Disable &amp;&amp; 返回</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/275882948d9b8fc3c23755ad63bfdc7f.png" alt></p><p><img src="/2019/08/16/关闭服务器CPU节能模式/b2b029be99ecb9e650e8e56a10ec6576.png" alt></p><p>4.CPU Cstat Cotrol -> Package C State Limit：C0/C1 state &amp;&amp; 返回</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/95c9b084f7e2fc451407699b7975986b.png" alt></p><p><img src="/2019/08/16/关闭服务器CPU节能模式/b4e8d2e61424419ad2422828dfc01ae9.png" alt></p><p>5.关闭QPI 总线的节能: advanced –> Chipset Configuration -> North Bridge -><br>QPI Configuration -> QPI General Configuretion —> LINK L0p /L1<br>enable更改为disable 。</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/08aae0c6bb3ac4d4f05a5c0546dd9d7d.png" alt></p><ol><li>F4 保存退出执行重启</li></ol><p>7、重启完成以后输入账户密码进入系统，打开终端，在命令行执行 lscpu |grep<br>“Hz”查看CPU是否处于额定主频（下图中共色框中两个数值是否相等或非常相近，2.10GHz=2100MHz），如是说明修改成功。</p><p><img src="/2019/08/16/关闭服务器CPU节能模式/6ca684228eb8f4c9cef650d33a2be84a.png" alt></p><p>change_grub.sh 脚本如下</p><pre><code>#!/bin/shcmd=&quot;intel_pstate=disable intel_idle.max_cstate=0 processor.max_cstate=1 idle=poll quiet&quot;check=$(cat /etc/default/grub |grep &quot;intel_pstate=disable intel_idle.max_cstate=0 processor.max_cstate=1 idle=poll&quot; | wc -l ) if [ $check -eq 0 ]    then         sed -i &quot;/GRUB_CMDLINE_LINUX/ s/quiet/$cmd/g&quot; /etc/default/grub    else        printf &quot;the file has been edited at a earlier time&quot;        exit 0fiif [ $? -ne 0 ]then    printf &quot;faild,please change it by edit the file&quot;    exit 1figrub2-mkconfig -o /boot/grub2/grub.cfg &amp;&amp; reboot</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="IT" scheme="https://jiangxingye.github.io/categories/IT/"/>
    
      <category term="服务器" scheme="https://jiangxingye.github.io/categories/IT/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="关闭服务器CPU节能模式" scheme="https://jiangxingye.github.io/tags/%E5%85%B3%E9%97%AD%E6%9C%8D%E5%8A%A1%E5%99%A8CPU%E8%8A%82%E8%83%BD%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>meiyatest</title>
    <link href="https://jiangxingye.github.io/2019/08/15/meiyatest/"/>
    <id>https://jiangxingye.github.io/2019/08/15/meiyatest/</id>
    <published>2019-08-15T07:25:06.000Z</published>
    <updated>2019-08-22T08:07:14.265Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>美亚CH服务器性能基准测试</p><h1 id="硬件配置一览表"><a href="#硬件配置一览表" class="headerlink" title="硬件配置一览表"></a>硬件配置一览表</h1><table><thead><tr><th><strong>型号</strong></th><th><strong>内部名称</strong></th><th><strong>技术规格</strong></th></tr></thead><tbody><tr><td>刀片机</td><td>还原（配套智能网卡）-低配</td><td>高密多节点服务器，每U≥2节点，总高度≤4U/每节点配置:2颗英特尔至强银牌4110 CPU（2.1GHz，8核）/128G DDR4内存/1*600G 15K SAS希捷硬盘/<strong>按厂商需求配备raid（有些品牌不配raid没法识别硬盘）</strong>/至少配备2个千兆网口，1个独立MGMT带外管理口（支持远程KVM功能)/预留至少1个半高半长pcie3.0*8网卡的插槽（长167mm，高68mm,厚16mm）/支持CentOS7.3，同时支持更高版本/带导轨/机箱冗余电源/备注功耗</td></tr><tr><td></td><td>还原（配套智能网卡）-中配</td><td>高密多节点服务器，每U≥2节点，总高度≤4U/每节点配置：2颗英特尔至强银牌4114 CPU（2.2GHz，10核）/256G DDR4内存/1*600G 15K SAS希捷硬盘/<strong>按厂商需求配备raid（有些品牌不配raid没法识别硬盘）</strong>/至少配备2个千兆网口，1个独立MGMT带外管理口（支持远程KVM功能/预留至少1个半高半长pcie3.0*8网卡的插槽（长167mm，高68mm,厚16mm）/支持CentOS7.3，同时支持更高版本/带导轨/机箱冗余电源/备注功耗</td></tr><tr><td></td><td>还原（配套智能网卡）-高配</td><td>高密多节点服务器，每U≥2节点，总高度≤4U/每节点配置为：2颗英特尔至强金牌6126 CPU（2.6GHz，12核）/512G DDR4内存/1*600G 15K SAS希捷硬盘/<strong>按厂商需求配备raid（有些品牌不配raid没法识别硬盘）</strong>/至少配备2个千兆网口，1个独立MGMT带外管理口（支持远程KVM功能）/预留至少1个半高半长pcie3.0*8网卡的插槽（长167mm，高68mm,厚16mm）/支持CentOS7.3，同时支持更高版本/带导轨/机箱冗余电源/备注功耗</td></tr><tr><td>索引服务器</td><td>索引</td><td>2U服务器/2颗英特尔至强银牌4110 CPU（2.1GHz，8核）/64G DDR4/8*900G SAS 10000rpm/ Raid0、1、5、6（1G缓存带超级电容）/双万兆和双千兆网口，不配万兆光模块（要求都是Intel的网卡，并且千兆支持支持IGB驱动，igb-3.2.10、igb-3.4.7、igb-5.1.2 这些版本都可以，万兆支持IXGBE驱动）、1个独立带外管理端口（支持远程KVM）/支持CentOS7.3，同时支持更高版本/带导轨，单电源/</td></tr><tr><td>存储服务器</td><td>存储</td><td>2U服务器/2颗英特尔至强银牌4110 CPU（2.1GHz，8核）/128G DDR4/12*8T SATA 7200RPM/Raid0,1,5,6（1G或以上缓存，带超级电容，支持12个硬盘做1组Raid6）/每服务器双万兆和双千兆网口，不配万兆光模块（要求都是Intel的网卡，并且千兆支持支持IGB驱动，igb-3.2.10、igb-3.4.7、igb-5.1.2 这些版本都可以，万兆支持IXGBE驱动），1个独立MGMT带外管理口（支持远程KVM功能）/支持CentOS7.3及以上版本/带导轨，单电源/要求使用希捷企业级热插拔服务器硬盘/</td></tr></tbody></table><h1 id="系统安装要求"><a href="#系统安装要求" class="headerlink" title="系统安装要求"></a>系统安装要求</h1><p>出厂预安装:做好raid5、划分VD、安装Centos 7.3<br>64位、安装图形化界面等操作。（避免现场安装失败问题）</p><p>1、刀片机 ：<br>直接安装系统，无需做raid，按厂商需求配备raid（有些品牌不配raid没法识别硬盘）；</p><p>2、SOLR : raid5，划分2个VD （VD0 ：600G VD1 ：剩余空间 ，挂载为/data）</p><p>3、HBase : raid5，划分2个VD （VD0 ：600G VD1 ：16T ，挂载为/data<br>,其余空间不用挂载）</p><h1 id="测试环境准备"><a href="#测试环境准备" class="headerlink" title="测试环境准备"></a>测试环境准备</h1><p><strong>准备工作</strong></p><p>以下要求适用于sorl、存储的CentOS V7.3及以上版本的服务器。</p><p><strong>操作系统参数</strong></p><p>vi /etc/security/limits.conf</p><p>* hard nofile 1000000</p><p>* soft nofile 1000000</p><p>* hard nproc 409600</p><p>* soft nproc 409600</p><p>vi /etc/security/limits.d/20-nproc.conf</p><p>* soft nproc 409600</p><p>echo 0 > /proc/sys/vm/swappiness;</p><p>echo vm.swappiness=0 >> /etc/sysctl.conf</p><p>设置linux内核参数：</p><p>vi /etc/sysctl.conf</p><p>net.core.somaxconn = 8192</p><p>net.ipv4.tcp_max_syn_backlog = 8192</p><p>net.ipv4.tcp_synack_retries = 2</p><p>net.ipv4.tcp_syn_retries = 2</p><p>net.ipv4.tcp_timestamps = 0</p><p>net.ipv4.tcp_window_scaling = 1</p><p>net.core.rmem_max = 16777216</p><p>net.core.wmem_max = 16777216</p><p>net.ipv4.tcp_rmem = 4096 87380 16777216</p><p>net.ipv4.tcp_wmem = 4096 87380 16777216</p><p>kernel.pid_max = 200000</p><p>vm.max_map_count = 400000</p><p>并执行：</p><p>sysctl -p</p><p><strong>禁用SELINUX { 或 /etc/sysconfig/selinux disabled }</strong></p><p>vi /etc/selinux/config</p><p>SELINUX=disabled</p><p>并执行：</p><p>setenforce 0</p><p><strong>禁用iptables</strong></p><p>systemctl stop firewalld #关闭防火墙</p><p>systemctl disable firewalld #禁止开机启动</p><p><strong>HBase: gcc-c++安装</strong></p><p>CentOS7.3 gcc-c++ 将依赖的包放在ee文件夹上传到/opt目录或者从系统盘中安装</p><p>cd /opt/ee</p><p>执行如下操作：</p><p>rpm -ivh glibc-common-2.17-157.el7.x86_64.rpm</p><p>rpm -ivh kernel-headers-3.10.0-514.el7.x86_64.rpm</p><p>rpm -ivh libgcc-4.8.5-11.el7.x86_64.rpm</p><p>rpm -ivh libgcc-4.8.5-11.el7.i686.rpm</p><p>rpm -ivh glibc-2.17-157.el7.x86_64.rpm</p><p>rpm -ivh mpfr-3.1.1-4.el7.x86_64.rpm</p><p>rpm -ivh libgomp-4.8.5-11.el7.x86_64.rpm</p><p>rpm -ivh nscd-2.17-157.el7.x86_64.rpm</p><p>rpm -ivh glibc-headers-2.17-157.el7.x86_64.rpm</p><p>rpm -ivh glibc-devel-2.17-157.el7.x86_64.rpm</p><p>rpm -ivh libstdc++-4.8.5-11.el7.x86_64.rpm</p><p>rpm -ivh libstdc++-devel-4.8.5-11.el7.x86_64.rpm</p><p>rpm -ivh libmpc-1.0.1-3.el7.x86_64.rpm</p><p>rpm -ivh cpp-4.8.5-11.el7.x86_64.rpm</p><p>rpm -ivh gcc-4.8.5-11.el7.x86_64.rpm</p><p>rpm -ivh gcc-c++-4.8.5-11.el7.x86_64.rpm</p><p>[\@more\@] gcc -v （查看是否安装成功）</p><p>[root\@localhost ee]# gcc -v</p><p>Using built-in specs.</p><p>COLLECT_GCC=gcc</p><p>COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper</p><p>Target: x86_64-redhat-linux</p><p>Configured with: ../configure –prefix=/usr –mandir=/usr/share/man<br>–infodir=/usr/share/info –with-bugurl=<a href="http://bugzilla.redhat.com/bugzilla" target="_blank" rel="noopener">http://bugzilla.redhat.com/bugzilla</a><br>–enable-bootstrap –enable-shared –enable-threads=posix<br>–enable-checking=release –with-system-zlib –enable-__cxa_atexit<br>–disable-libunwind-exceptions –enable-gnu-unique-object<br>–enable-linker-build-id –with-linker-hash-style=gnu<br>–enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto –enable-plugin<br>–enable-initfini-array –disable-libgcj<br>–with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install<br>–with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install<br>–enable-gnu-indirect-function –with-tune=generic –with-arch_32=x86-64<br>–build=x86_64-redhat-linux</p><p>Thread model: posix</p><p>gcc version 4.8.5 20150623 (Red Hat 4.8.5-11) (GCC) (说明安装成功)</p><p><strong>JDK安装</strong></p><p>cd /usr/local</p><p>将jdk1.7.0_25.tar.gz放在/usr/local解压.</p><p>ln -s /usr/local/jdk1.7.0_25/ /usr/local/java7</p><p>vi /etc/profile</p><p>添加：</p><p>export JAVA_HOME=/usr/local/java7</p><p>export PATH=\$JAVA_HOME/bin:\$PATH</p><p>export HADOOP_HOME=/usr/local/hadoop</p><p>export PATH=\$HADOOP_HOME/bin:\$PATH</p><p>export HBASE_HOME=/usr/local/hbase</p><p>export PATH=\$HBASE_HOME/bin:\$PATH</p><p>并执行：</p><p>source /etc/profile</p><h1 id="FIO测试"><a href="#FIO测试" class="headerlink" title="FIO测试"></a>FIO测试</h1><h2 id="1、fio安装"><a href="#1、fio安装" class="headerlink" title="1、fio安装"></a>1、fio安装</h2><p>fio-2.1.10.tar.gz解压至/usr/local/</p><p>cd /usr/local</p><p>tar zxvf fio-2.1.10.tar.gz</p><p>cd fio-2.0.7<br>make<br>make install</p><p>fio测试</p><h2 id="2、还原机FIO"><a href="#2、还原机FIO" class="headerlink" title="2、还原机FIO"></a>2、还原机FIO</h2><p>随机写50MB ，bs 2k</p><p>fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=randwrite<br>-ioengine=psync -bs=2k -size=50MB -numjobs=30 -runtime=300 -group_reporting<br>-name=mytest</p><p>随机写1G ，bs 4k</p><p>fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=randwrite<br>-ioengine=psync -bs=4k -size=1G -numjobs=30 -runtime=300 -group_reporting<br>-name=mytest</p><p>顺序读50M ，bs 2k</p><p>fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=read -ioengine=psync<br>-bs=2k -size=50MB -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>顺序读1G ，bs 4k</p><p>fio -filename=/dev/sda -direct=1 -iodepth 8 -thread -rw=read -ioengine=psync<br>-bs=4k -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><h2 id="3、索引FIO"><a href="#3、索引FIO" class="headerlink" title="3、索引FIO"></a>3、索引FIO</h2><p>顺序写500MB ，bs 512k</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync<br>-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>顺序写1G，bs 1MB</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync<br>-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>随机读500MB ，bs 512k</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync<br>-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>随机读1G ，bs 1MB</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync<br>-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><h2 id="4、存储FIO"><a href="#4、存储FIO" class="headerlink" title="4、存储FIO"></a>4、存储FIO</h2><p>顺序写500MB ，bs 512k</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync<br>-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>顺序写1G，bs 1MB</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=write -ioengine=psync<br>-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>随机读500MB ，bs 512k</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync<br>-bs=512K -size=500MB -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><p>随机读1G ，bs 1MB</p><p>fio -filename=/dev/sdb -direct=1 -iodepth 8 -thread -rw=randread -ioengine=psync<br>-bs=1MB -size=1G -numjobs=30 -runtime=300 -group_reporting -name=mytest</p><h1 id="索引基准测试"><a href="#索引基准测试" class="headerlink" title="索引基准测试"></a>索引基准测试</h1><h2 id="SOLR安装"><a href="#SOLR安装" class="headerlink" title="SOLR安装"></a>SOLR安装</h2><p>solrs.tar 解压至/usr/local/</p><p>tar xvf solrs.tar</p><p>solrs_data.tar 解压至/data</p><p>tar xvf solrs_data.tar</p><h2 id="将数据解压至-data"><a href="#将数据解压至-data" class="headerlink" title="将数据解压至/data"></a>将数据解压至/data</h2><p>scp ip:/home/benchmark_solr.tar /data</p><p>cd /data</p><p>tar xvf benchmark_solr.tar</p><h2 id="solr基准测试"><a href="#solr基准测试" class="headerlink" title="solr基准测试"></a>solr基准测试</h2><p>启动solr</p><p>killall java;</p><p>/data/benchmark/solrs/yk/bin/startup.sh</p><p>清空系统缓存</p><p>echo 3 > /proc/sys/vm/drop_caches</p><p>验证<a href="http://**ip**:8900/solr/yk/select?q=\*%3A\*&amp;wt=json&amp;indent=true确保访问正常，返回如下结果" target="_blank" rel="noopener">http://**ip**:8900/solr/yk/select?q=\*%3A\*&amp;wt=json&amp;indent=true确保访问正常，返回如下结果</a></p><p><img src="/2019/08/15/meiyatest/3f08f42e7eb2c1942eeed79dd1085cb3.png" alt="C:\\Users\\zhujm\\AppData\\Local\\Temp\\ksohtml\\wps_clip_image-22344.png"></p><p>登录任意一台服务器（如：172.16.20.159，与solr服务器同一网段），安装perl环境（perl为系统盘对应的版本）</p><p>将benchmark.tar.gz文件解压到/opt目录后执行如下操作：</p><p>cd /opt/benchmark/solr/</p><p>修改benchmark.perl一些参数配置：</p><p>forkCount:并发数 测试并发数为：100</p><p>queryCount:查询次数 测试并发数为：1000</p><p>urlHost：目标主机ip 根据实际SOLR服务器的ip配置</p><p><img src="/2019/08/15/meiyatest/69ac37994a381a720102b2a5db2a68e8.png" alt></p><p>执行benchmark文件：perl benchmark.perl，运行结果：</p><p><img src="/2019/08/15/meiyatest/2449c646329951cf1d16064b6ee872ae.png" alt="C:\\Users\\zhujm\\AppData\\Local\\Temp\\ksohtml\\wps_clip_image-22442.png"></p><p>Req/s:(每秒请求数)</p><p>Avg:平均耗时</p><p>Median:中间耗时</p><p>95th:95%的查询耗在2.604范围</p><p>99th:99%的查询耗时在5.498范围</p><p>Max：最大耗时</p><h1 id="存储基准测试"><a href="#存储基准测试" class="headerlink" title="存储基准测试"></a>存储基准测试</h1><h2 id="1、主机名配置"><a href="#1、主机名配置" class="headerlink" title="1、主机名配置"></a>1、主机名配置</h2><p>vi /etc/sysconfig/network</p><p><img src="/2019/08/15/meiyatest/45931771e1bb7e555a61ea0ec9db9811.png" alt></p><p>并执行hostname HBase-01</p><h2 id="2、主机名查询静态表配置"><a href="#2、主机名查询静态表配置" class="headerlink" title="2、主机名查询静态表配置"></a>2、主机名查询静态表配置</h2><p><img src="/2019/08/15/meiyatest/2e2abea932820757fd7fbede289d6046.png" alt></p><h2 id="3、snappy安装"><a href="#3、snappy安装" class="headerlink" title="3、snappy安装"></a>3、snappy安装</h2><p>snappy-1.1.2.tar.gz解压至/opt/下</p><p>cd /opt;</p><p>tar zxvf snappy-1.1.2.tar.gz</p><p>cd /snappy-1.1.2</p><p>./configure</p><p>make</p><blockquote><p>make install</p></blockquote><h2 id="4、ssh无密码登陆"><a href="#4、ssh无密码登陆" class="headerlink" title="4、ssh无密码登陆"></a>4、ssh无密码登陆</h2><p>ssh-keygen -t rsa （回车到底）</p><blockquote><p>cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys</p></blockquote><h2 id="5、hadoop安装"><a href="#5、hadoop安装" class="headerlink" title="5、hadoop安装"></a>5、hadoop安装</h2><blockquote><p>解压hadoop.tar至/usr/local/</p></blockquote><p>tar xvf hadoop.tar</p><p>ln -s /usr/local/hadoop-1.0.3/ /usr/local/hadoop</p><blockquote><p>ln -s /usr/local/hbase-0.94.1/ /usr/local/hbase</p></blockquote><h2 id="6、hadoop启动"><a href="#6、hadoop启动" class="headerlink" title="6、hadoop启动"></a>6、hadoop启动</h2><p>killall -s 9 java</p><p>rm -rf /data/hadoop/</p><p>hadoop namenode -format</p><p>start-all.sh</p><h2 id="7、hadoop验证"><a href="#7、hadoop验证" class="headerlink" title="7、hadoop验证"></a>7、hadoop验证</h2><blockquote><p>查看<a href="http://172.16.20.232:50070/dfshealth.jsp页面，确保访问正常，同时" target="_blank" rel="noopener">http://172.16.20.232:50070/dfshealth.jsp页面，确保访问正常，同时</a> Dead<br>Nodes为0</p><p>执行jps命令,确保有以下的进程</p></blockquote><p><img src="/2019/08/15/meiyatest/a33a5ef81689966982262057c2f8145d.png" alt="C:\\Users\\zhujm\\AppData\\Local\\Temp\\ksohtml\\wps_clip_image-24620.png"></p><h2 id="9、HBase基准测试"><a href="#9、HBase基准测试" class="headerlink" title="9、HBase基准测试"></a>9、HBase基准测试</h2><p>测试工具（yscb安装）</p><p>mkdir -p /opt/benchmark/hbase/;</p><p>解压yscb至/opt/benchmark/hbase/</p><p>cd /opt/benchmark/hbase/</p><p>tar zxvf ycsb-0.1.4.tar.gz</p><h2 id="10、HBase启动"><a href="#10、HBase启动" class="headerlink" title="10、HBase启动"></a>10、HBase启动</h2><p>清空系统缓存:</p><p>echo 3 > /proc/sys/vm/drop_caches</p><p>killall -s 9 java</p><p>rm -rf /data/hadoop/</p><p>hadoop namenode -format</p><p>start-dfs.sh</p><p>start-hbase.sh</p><h2 id="11、HBase验证"><a href="#11、HBase验证" class="headerlink" title="11、HBase验证"></a>11、HBase验证</h2><blockquote><p>查看<a href="http://172.16.20.232:60010/master-status页面，确保访问正常，同时没有Dead" target="_blank" rel="noopener">http://172.16.20.232:60010/master-status页面，确保访问正常，同时没有Dead</a><br>Region Servers</p><p>执行jps命令,确保有以下的进程：</p></blockquote><p><img src="/2019/08/15/meiyatest/3f13831faa7287894df35d582719048f.png" alt="C:\\Users\\zhujm\\AppData\\Local\\Temp\\ksohtml\\wps_clip_image-26658.png"></p><h2 id="12、HBase基准测试"><a href="#12、HBase基准测试" class="headerlink" title="12、HBase基准测试"></a>12、HBase基准测试</h2><p>创建hbase表</p><p>echo “create ‘usertable’,’f1’,’f2’,’f3’”|hbase shell</p><p>查看表是否已经创建</p><p>echo list|hbase shell</p><p><img src="/2019/08/15/meiyatest/807fc1f42a0e08e3398a48ad6bdd9c2c.png" alt="C:\\Users\\zhujm\\AppData\\Local\\Temp\\ksohtml\\wps_clip_image-27334.png"></p><p>清空系统缓存:</p><p>echo 3 > /proc/sys/vm/drop_caches</p><p>cd /opt/benchmark/hbase/ycsb-0.1.4/bin;</p><p>执行插入测试，创建100个线程,插入100w条记录：</p><blockquote><p>./ycsb load hbase -P ../workloads/workloada -p threads=100 -p<br>columnfamily=f1 -p recordcount=1000000 -s > load.dat</p></blockquote><p>测试结果存取在load.dat中,查看load.dat有如下结果</p><p>grep -v -E ‘UPDATE|CLEANUP’ load.dat|more</p><p><img src="/2019/08/15/meiyatest/bb56c0029f8f549b4cc984e036524a18.png" alt="C:\\Users\\zhujm\\AppData\\Local\\Temp\\ksohtml\\wps_clip_image-27170.png"></p><p>Runtime:执行时间(ms)</p><p>Throughput(ops/sec):吞吐量(每秒操作次数)</p><p>Operations：操作总数</p><p>AverageLatency：平均耗时(us)</p><p>MinLatency:最小耗时(us)</p><p>MaxLatency:最大耗时(us)</p><p>95thPercentileLatency(ms):95%的执行时间范围</p><p>99thPercentileLatency(ms):99%的执行时间范围</p><blockquote><p>执行事务操作(95%的读操作 5%的写操作)</p><p>创建100个线程,操作100w次</p><p>./ycsb run hbase -P ../workloads/workloadb -threads 100 -p<br>measurementtype=timeseries -p columnfamily=f1 -p operationcount=1000000 -p<br>timeseries.granularity=2000 > transactions.dat</p><p>测试结果存取在transactions.dat中</p><p>查看更新操作测试结果</p><p>grep UPDATE transactions.dat</p><p>查看读取操作测试结果</p><p>grep READ transactions.dat</p></blockquote><p><img src="/2019/08/15/meiyatest/8e432a6721779f92712efc517a20e388.png" alt></p><h1 id="NMON监控"><a href="#NMON监控" class="headerlink" title="NMON监控"></a>NMON监控</h1><p>在做SOLR或HBase基准测试时，使用nmon监控服务器的CPU、内存、磁盘资源使用情况</p><h2 id="1、安装nmon"><a href="#1、安装nmon" class="headerlink" title="1、安装nmon"></a>1、安装nmon</h2><blockquote><p>解压nmon至/usr/local/</p><p>cd /usr/local</p><p>tar zxvf nmon.tar.gz</p></blockquote><h2 id="2、修改nmon参数"><a href="#2、修改nmon参数" class="headerlink" title="2、修改nmon参数"></a>2、修改nmon参数</h2><blockquote><p>cd nmon</p><p>vi nmon_start.sh</p><p>修改频率为10秒一次，监控5000次：</p></blockquote><p><img src="/2019/08/15/meiyatest/55693422c2f187bede43e163626a9a9d.png" alt></p><h2 id="3、运行nmon"><a href="#3、运行nmon" class="headerlink" title="3、运行nmon"></a>3、运行nmon</h2><blockquote><p>做基准测试同时，运行nmon，监控测试时的硬件资源使用情况</p><p>./nmon_start.sh</p><p>同一目录下会生成nmon文件</p></blockquote><p><img src="/2019/08/15/meiyatest/8e979ce79ec9cd55ae8dd17c544bc865.png" alt></p><h2 id="4、关掉nmon"><a href="#4、关掉nmon" class="headerlink" title="4、关掉nmon"></a>4、关掉nmon</h2><blockquote><p>基准测试结束时，停掉nmon</p><p>Killall nmon</p></blockquote><h2 id="5、生成图形化结果"><a href="#5、生成图形化结果" class="headerlink" title="5、生成图形化结果"></a>5、生成图形化结果</h2><blockquote><p>打开nmon analyser v34a.xls，点击Analyse nmon data<br>按键，加载nmon文件，生成图形化结果：</p></blockquote><p><img src="/2019/08/15/meiyatest/594cc99f55d6df5ec031b64b43d0f00b.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="IT" scheme="https://jiangxingye.github.io/categories/IT/"/>
    
      <category term="服务器" scheme="https://jiangxingye.github.io/categories/IT/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="美亚测试机要求" scheme="https://jiangxingye.github.io/tags/%E7%BE%8E%E4%BA%9A%E6%B5%8B%E8%AF%95%E6%9C%BA%E8%A6%81%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>苏联解体的启示</title>
    <link href="https://jiangxingye.github.io/2019/08/12/%E8%8B%8F%E8%81%94%E8%A7%A3%E4%BD%93%E7%9A%84%E5%90%AF%E7%A4%BA/"/>
    <id>https://jiangxingye.github.io/2019/08/12/苏联解体的启示/</id>
    <published>2019-08-12T11:15:19.000Z</published>
    <updated>2019-08-12T11:31:29.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>从1989春至1991年底，短短两年，人类历史上最强大的专政机器——苏联东欧红色帝国土崩瓦解。这是二十世纪最伟大的故事。</p><p>一个皇朝的解体，一般可以概括为：“生于不义，死于耻辱。”</p><p>皇朝倒台前会有几个特点：</p><p>货币急速贬值，老百姓爱做梦。</p><p>美国当年成立特殊金融小组制裁前苏联，导致苏联解体。</p><p>表面强大的前苏联，就这样既无外敌入侵，又没有天灾，自己就玩不下去了，就解体了。</p><p>朝鲜经济短时间内很难稳定，楼市、基建、政府各种债务出清，国有资产私有化，</p><p>区域自治的各地关税统一等等，这些问题牵扯到的利益博弈将是及其复杂，</p><p>没有十几年的争吵很难达成统一，毕竟是各方都有选票，财富无论怎么划分，</p><p>都会有人不满意，这就注定了未来朝鲜金融系统将会长期动荡。</p><p>总之，生活在百姓无知，爱做梦的国家，挺难的，不确定性太大。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="读书" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="历史" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/%E5%8E%86%E5%8F%B2/"/>
    
    
      <category term="苏联解体" scheme="https://jiangxingye.github.io/tags/%E8%8B%8F%E8%81%94%E8%A7%A3%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>如何在服务器的BIOS中设置上电自启动</title>
    <link href="https://jiangxingye.github.io/2019/08/12/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84BIOS%E4%B8%AD%E8%AE%BE%E7%BD%AE%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    <id>https://jiangxingye.github.io/2019/08/12/如何在服务器的BIOS中设置上电自启动/</id>
    <published>2019-08-12T06:36:33.000Z</published>
    <updated>2019-08-22T08:07:32.776Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>说明：</strong></p><p>1、为什么要实现这种功能，很多时候在民间都基本用普通PC来做小型服务器，公司的私服等等，而这些普通PC在民用电环境中经常会停电，一停就会导致服务器不能自动来电重启，所以这个功能来点开机是必须的。</p><p>2、普通PC基本都是以下这些配置方式，但不要和服务器主板做比较，服务器主板有专业的配置选项以及专业的来电自动启动设备。</p><p><strong>下面根据不同的BIOS列出相应的设置方法：</strong></p><p><img src="/2019/08/12/如何在服务器的BIOS中设置上电自启动/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20190812142347.png" alt></p><p>1：首先进入BIOS的设置主界面，选择[POWER MANAGEMENT SETUP]，再选择[PWR Lost Resume State]，这一项有三个选择项。</p><p>选择[Keep OFF]项，代表停电后再来电时，电脑不会自动启动。<br>        选择[Turn On]项，代表停电后再来电时，电脑会自动启动。<br>        选择的[Last State]，那么代表停电后再来电时，电脑恢复到停电前电脑的状态。断电前如果电脑是处于开机状态，那么来电后就会自动开机。断电前是处于关机状态，那么来电后电脑不会自动开机。</p><p>2：首先进入Power Management Setup（电源管理设定）→Power Again（再来电状态），此项决定了开机时意外断电之后，电力供应恢复时系统电源的状态。设定值有：<br>Power Off（保持系统处于关机状态）<br>Power On（保持系统处于开机状态）<br>Last State（恢复到系统断电前的状态）进入挂起/睡眠模式，但若按钮被揿下超过4秒，机器关机。<br>若想来电自动开机把上面的这项改成power on就行了！</p><p>3：有的BIOS中[POWER MANAGEMENT SETUP]没有上面说的[PWR Lost Resume State]，可以在[PWRON After PWR-Fail]→[Integrated Peripherals]选项中找到两个选项：ON(打开自动开机)和OFF(关闭自动开机)，设置为OFF即可。<br>不同的主板及BIOS型号相对应的选项会有所不同，但我想应该会差不多，一般都在[POWER MANAGEMENT SETUP]这个选项中可以找到相应的设置选项！  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="IT" scheme="https://jiangxingye.github.io/categories/IT/"/>
    
      <category term="服务器" scheme="https://jiangxingye.github.io/categories/IT/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="如何在服务器的BIOS中设置上电自启动" scheme="https://jiangxingye.github.io/tags/%E5%A6%82%E4%BD%95%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84BIOS%E4%B8%AD%E8%AE%BE%E7%BD%AE%E4%B8%8A%E7%94%B5%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>raid丢失系统恢复案例</title>
    <link href="https://jiangxingye.github.io/2019/08/12/raid%E4%B8%A2%E5%A4%B1%E7%B3%BB%E7%BB%9F%E6%81%A2%E5%A4%8D%E6%A1%88%E4%BE%8B/"/>
    <id>https://jiangxingye.github.io/2019/08/12/raid丢失系统恢复案例/</id>
    <published>2019-08-12T04:31:04.000Z</published>
    <updated>2019-08-22T08:07:39.600Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="How-to-fix-“No-Bootable-Device”-issue-on-server"><a href="#How-to-fix-“No-Bootable-Device”-issue-on-server" class="headerlink" title="How to fix “No Bootable Device” issue on server?"></a>How to fix “No Bootable Device” issue on server?</h1><p><strong>故障现象：</strong></p><p><img src="/2019/08/12/raid丢失系统恢复案例/353c3787ac700e369a1951dade7f985.jpg" alt="故障图片"></p><p><strong>原因分析：</strong>客户机器有独立的RAID卡，2块物理磁盘做的RAID0，和客户沟通，RAID卡进去状态不正常，不想重新安装系统。因为上面的环境配置很麻烦。</p><p><strong>处理过程：</strong> 重新在RAID卡里做同级别RAID的话，不在raid里做clear操作的话，数据不丢失的话，理论上系统是有办法恢复的，如果数据会消失，那就要重做了。经验证，做同级别RAID系统恢复，数据并未消失。</p><p><strong>问题解决：</strong></p><p><img src="/2019/08/12/raid丢失系统恢复案例/22.png" alt="问题解决"></p><p><strong>建议：</strong> 如果系统上有重要数据的话，还是建议使用RAID1会安全一些。</p><p>如果你忙觉得上述案例帮助了您，给个赞哦，当然也可以打赏杯可乐，我就不用喝酱油兑水了,^_^ </p><p>么么哒！</p><p><strong>服务器购买也可以通过下面的联系方式向我咨询。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="IT" scheme="https://jiangxingye.github.io/categories/IT/"/>
    
      <category term="服务器" scheme="https://jiangxingye.github.io/categories/IT/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="bootable device were deteced." scheme="https://jiangxingye.github.io/tags/bootable-device-were-deteced/"/>
    
  </entry>
  
  <entry>
    <title>[记]《知识分子的不幸》-王小波</title>
    <link href="https://jiangxingye.github.io/2019/06/09/misfortune-intellectual/"/>
    <id>https://jiangxingye.github.io/2019/06/09/misfortune-intellectual/</id>
    <published>2019-06-09T13:31:09.000Z</published>
    <updated>2019-08-09T10:39:09.050Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这篇文章发表于1996年第二期《东方》杂志，同样收录于《沉默的大多数》一书中。</p><h2 id="所想"><a href="#所想" class="headerlink" title="所想"></a>所想</h2><p>文章一开头就抛出了一个问题：什么是知识分子最害怕的事？想起了高晓松在晓说中提到过这个问题，晓松肯定是看过这篇文章的。</p><p>王小波说：“<strong>知识分子最怕活在不理智的年代。”所谓不理智的年代，就是伽利略低头认罪，承认地球不转的年代，也是拉瓦斯上断头台的年代；是茨威格服毒自杀的年代，也是老舍跳太平湖的年代。</strong>“</p><p>王小波和他的美国老师谈论了一个问题：”有信仰比无信仰要好。“，由于王小波是经历过文革的，所以王小波一开始是抵触这种思想的，尤其是 <strong>课间祷告 </strong>让王小波想起了文革中的 <strong>早请示</strong>。但老师最终说服了他，“<strong>不管是信神，还是自珍自重，人活在世界上总得有点信念才成。就我个人而言，虽是无神论者，我也有个人操守，从不逾越。</strong>”</p><p>国内的学者，只搞学术研究，不搞意识形态，这由不了自己。有朝一日它成了意识形态，你的话就是罪状。言论不自由，不理智，民族狂热，这不就是知识分子最怕的事情吗？</p><p>王小波崇拜墨子：其一，他思维缜密，其二，他敢赤裸裸地谈利害。（有了他，我也敢说自己是中华民族的赤诚分子，不怕国学家说我是全盘西化了。）</p><p>营造意识形态则是灭绝思想额丰饶。中国的人文知识分子，有种以天下为己任的使命感，总觉得自己该搞出些老百姓当信仰的东西。</p><p>国学，这种东西实在厉害。最可怕之处就在于那个“国”字。顶着这个字，谁敢有不同意见？抢到了这个制高点，就可以压制一切不同意见；所以很容易落入思想流氓的手中变成一种凶器。</p><p>目前正值 “<strong>中美贸易战</strong>”，各种自媒体为了点击量、关注度。煽动民族狂热情绪，导致民众根本容不得半点不同意见，不讲道理，“盲目爱国“。</p><p>认真思索，真诚的明辨是非，有这种态度大概就可算是善良了吧。</p><p>人活在世上，自会形成信念，一种学问、一本书，假如不对我的价值观发生变化，就不值得一学，不值得一看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="读书" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="阅读笔记" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="reading" scheme="https://jiangxingye.github.io/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>人们在一本叫《活着》的书中纷纷死去</title>
    <link href="https://jiangxingye.github.io/2019/05/02/to-live/"/>
    <id>https://jiangxingye.github.io/2019/05/02/to-live/</id>
    <published>2019-05-02T09:46:16.000Z</published>
    <updated>2019-08-09T10:39:09.051Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>有那么一个年代，离我们很近，它腥风血雨，连活着都是一件奢侈的事。</p><p>在富贵的一生中，每次出现看似被上天眷顾的福气后（如有庆长跑第一、凤霞嫁了人并怀了孩子），读者还在替富贵开心的时候，他们却以各种方式迅速死去，最终富贵亲手埋葬了他所有的亲人。</p><p>一本 12w 左右的小说，但是在没有华丽词藻的情况下，在顺畅流利的写作手法、跌宕起伏的剧情、第一人称的代入感下一口气读完了。期间多次痛哭流涕（一点儿没夸张），不得不放下书本，洗过脸后才能继续阅读。所以已经多年没写书评的我，还是忍不住为她写下书评。</p><blockquote><p>人是为了活着本身而活着，而不是为了活着之外的任何事物所活着。</p></blockquote><p>这是作者在中文序言中的一句话，在当今生活着的我，初读序言中的这句话，并无任何共鸣，甚至还行吐槽两句。随着富贵将他的”一生”娓娓道来，你就会明白在那样的时代背景下，活着已经是一件不容易的事。 所以作者在日文版序言中说到：</p><blockquote><p>在旁人眼中富贵的一生是苦熬的一生；可是对于富贵自己，我相信他更多地感受到了幸福。</p></blockquote><p>因为他相信自己的妻子是世上最好的妻子，他相信自己的子女也是世上最好的子女，还有他的女婿他的外孙，还有他的那头也叫富贵的牛，还有一起上火锅的朋友们，还有生活的点点滴滴……</p><p>富贵的真是一路跌下去的一生，从”富家少爷”赌光了家产、气死了爹爹。由于母亲生病，为母亲求医路上被国民党抓壮丁，被俘虏后，放回家中。却发现母亲已死，女儿也由于生病变成了聋哑人。本想着大难之后必有后福，却只是悲惨一生的开端。儿子有庆由于和县长夫人血型匹配，遭抽血而亡、女儿凤霞产子大出血而亡、妻子家珍失去儿女后，失去了最后与病魔争斗的信念，也走了、女婿二喜在工地被水泥板拍死、外孙苦根难得吃到豆子，却被豆子撑死。最后只剩下自己和一个也叫作富贵的老牛。</p><p>春生想自杀前，找到富贵告别，在被家珍原谅，并答应不会自杀，在这种情况下坚持了一个月，最终还是自杀了。那种时代背景下的无奈，那种窒息感。。。</p><p>富贵的一生跨越了地主、解放战争、人民公社运动、大炼钢铁、自然灾害和文化大革命，从一个人的视角看到每个时代下的一个小小的缩影，但却比任何其他的描述更让人深刻了解到这些时代背景下人们的生活状态。</p><p>在那时，活着不仅是幸运，也更需要勇气。</p><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1556806574463&amp;di=868e65579acfc800020db78de3c07ac4&amp;imgtype=0&amp;src=http%3A%2F%2Fs1.sinaimg.cn%2Flarge%2F001Pe7mxzy76VARpXvdc3" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="读书" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="阅读笔记" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="reading" scheme="https://jiangxingye.github.io/tags/reading/"/>
    
      <category term="活着" scheme="https://jiangxingye.github.io/tags/%E6%B4%BB%E7%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>reading-list</title>
    <link href="https://jiangxingye.github.io/2017/01/31/reading-list/"/>
    <id>https://jiangxingye.github.io/2017/01/31/reading-list/</id>
    <published>2017-01-31T07:29:32.000Z</published>
    <updated>2019-08-11T08:38:26.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>下面是一些我读过的书<br><a id="more"></a><br>★ ★ ★ ★ ☆ ☆ ☆ ：推荐指数，7星制。此乃余之私见，或显偏薄。</p><h2 id="文学小说"><a href="#文学小说" class="headerlink" title="文学小说"></a>文学小说</h2><ol><li><strong>《棋王 树王 孩子王》</strong> by 阿城  2015年9月  ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《达芬奇密码》</strong> by 丹.布朗   2015年9月 ★ ★ ★ ★ ★ ★ ☆</li><li><strong>《追风筝的人》</strong> by 卡勒德·胡赛尼  2016年6月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《霍乱时期的爱情》</strong> by 加西亚·马尔克斯  2016年8月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《查令十字街84号》</strong> by 海莲·汉芙  2016年9月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《围城》</strong> by 钱钟书  2017年1月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《一个陌生女人的来信》</strong> by 茨威格  2017年1月 ★ ★ ★ ★ ★ ★ ☆</li><li><strong>《一颗心的沦亡》</strong> by 茨威格  2017年1月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《情感的迷茫》</strong> by 茨威格  2017年1月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《一个女人一生中的二十四个小时》</strong> by 茨威格  2017年1月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《摆渡人》</strong> by 克莱尔·麦克福尔 2019年3月28 ★ ☆ ☆ ☆ ☆ ☆ ☆</li><li><strong>《悟空传》</strong> by 今何在  2016年8月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《岛上书店》</strong> by 加·泽文 2019年4月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《月亮与六便士》</strong> by 毛姆 2019年4月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《活着》</strong> by 余华 2019年5月★ ★ ★ ★ ★ ★ ☆</li></ol><h2 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h2><ol><li><strong>《不去会死》</strong> by 石田裕辅 2017年2月 ★ ★ ★ ☆ ☆ ☆ ☆</li></ol><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><ol><li><strong>《秦迷·秦始皇的秘密》</strong> by 李开元  2016年3月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《鱼羊野史·第1卷》</strong> by 高晓松  2016年9月 ★ ★ ★ ★ ★ ☆ ☆</li></ol><h2 id="心理学"><a href="#心理学" class="headerlink" title="心理学"></a>心理学</h2><ol><li><strong>《天才在左，疯子在右》</strong> by 高铭  2016年3月 ★ ★ ★ ★ ★ ★ ☆</li></ol><h2 id="经济"><a href="#经济" class="headerlink" title="经济"></a>经济</h2><ol><li><strong>《历代经济变革得失》</strong> by 吴晓波 2017年2月 ★ ★ ★ ★ ★ ★ ☆</li></ol><h2 id="科幻"><a href="#科幻" class="headerlink" title="科幻"></a>科幻</h2><ol><li><strong>《球状闪电》</strong> by 刘慈欣  2016年3月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《三体·“地球往事”三部曲之一》</strong> by 刘慈欣  2016年4月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《流浪地球》</strong> by 刘慈欣 2019年3月 ★ ★ ★ ★ ☆ ☆ ☆</li></ol><h2 id="创业"><a href="#创业" class="headerlink" title="创业"></a>创业</h2><ol><li><strong>《从零到一》</strong> by 彼得·蒂尔 2015年6月 ★ ★ ★ ★ ☆ ☆ ☆</li><li><strong>《创业维艰》</strong> by 本·霍洛维茨  2015年6月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《餐巾纸上的创业课》</strong> by 神田昌典  2016年6月 ★ ★ ★ ★ ☆ ☆ ☆</li></ol><h2 id="方法论"><a href="#方法论" class="headerlink" title="方法论"></a>方法论</h2><ol><li><strong>《如何高效学习》</strong> by 斯科特·扬  2017年1月 ★ ★ ★ ★ ★ ☆ ☆</li><li><strong>《DISCover自我探索》</strong> by 李海峰 2017年1月 ★ ★ ★ ★ ★ ★ ☆</li></ol><h2 id="计算机"><a href="#计算机" class="headerlink" title="计算机"></a>计算机</h2><ol><li><strong>《淘宝技术这十年》</strong> by 子柳  2015年6月 ★ ★ ★ ★ ★ ☆ ☆</li></ol><h2 id="待读-在读"><a href="#待读-在读" class="headerlink" title="待读/在读"></a>待读/在读</h2><ol><li><strong>《基督山伯爵》</strong> by 大仲马</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下面是一些我读过的书&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="书单" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="reading" scheme="https://jiangxingye.github.io/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>人生若只如初见-《围城》</title>
    <link href="https://jiangxingye.github.io/2017/01/03/Fortress-Besieged/"/>
    <id>https://jiangxingye.github.io/2017/01/03/Fortress-Besieged/</id>
    <published>2017-01-03T03:27:04.000Z</published>
    <updated>2019-08-09T10:39:09.053Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://img.xiangzhangshugongyi.com/Fg0jOuF4-dBp5moIX00V4Q0X5C11.jpg" alt="围城"></p><blockquote><p>婚姻是被围困的城堡，城外的人想冲进去，城里的人想逃出来  –法国谚语</p></blockquote><a id="more"></a><p>方鸿渐对于鲍小姐，不堪抵抗；对于苏小姐的垂青，已再纠缠不清（导致方唐感情破裂的导火索）；最后与孙柔嘉的婚姻，因属于现实的无奈吧；至于唐晓芙，方对她应该有着最纯粹的爱意。</p><p>整部小说给我留下深刻印象的就是唐小姐，她在整部小说的占比是非常少的。</p><blockquote><p>总而言之，唐小姐是摩登文明社会里的那桩罕物――一个真正的女孩子。有许多都市女孩子已经是装模作样的早熟的女人，算不得孩子；有许多女孩子只是浑沌痴顽的无性别的孩子，还说不上女人。</p></blockquote><p>唐晓芙的聪明漂亮、活泼可爱，令方鸿渐一见倾心。</p><p>当初，是苏小姐的干预，激起了唐晓芙的逆反心理，不让接近我偏接近，书信往来，见面谈话，时间推移，俩人都投入了真正的感情。</p><p>作为苏的姐妹，唐晓芙骨子里也有跟苏小姐的高傲。</p><blockquote><p>方先生的过去太丰富了！我爱的人，我要能够占领他整个生命，他在碰见我以前，没有过去，留着空白等待我——</p></blockquote><p>方下定决心写信给苏撇清两人关系，苏的狭隘的心理从中挑拨导致方与唐之间的破裂</p><blockquote><p>他象一个受了责骂的孩子那样，泪水在眼睛里打转，却一句话也说不出口。</p></blockquote><p>所以当唐得知方的一些列斑斑劣迹后，愈心痛愈心恨，最后一次见方，连珠炮的发问，又恨方鸿渐为什么不辩护，她的心溶成了苦水。而方鸿渐的悲剧在于，他再次懦弱，该辩解时不辩解，该在屋外多淋雨时而过早走开，接到电话后，不问来人就大声呵斥，俩人都是好面子的人，看不到俩人为这段感情而去采取任何补救措施，而是各自松开了手。两人年轻，都不知退让，任彼此失之交臂。</p><p>从此直到最后，唐也没有再次出现。</p><p>但唐给我们的留下了一个近乎完美的形象，正是因为她没有和方走在一起，没有真实世俗的一面，才能留下那种只如初见的模样。</p><p>生活亦是如此，我们心目中的“女神”、“男神”，完美无缺的人，是那些我们曾经追求不得的人。想想若是得之，经过世俗的一面，ta的完美的形象，还会在你的心中站的稳吗。</p><blockquote><p>唐晓芙这个角色是钱老钟爱的角色，是钱老心中完美的女性形象，简单说就是女神！是围城里任何男人都配不上的，所以不舍得把她许配给任何人。</p><div style="text-align:right;width:100%">–杨绛先生</div></blockquote><p><img src="http://img.xiangzhangshugongyi.com/Fp_ZMZN4lHRo5ojcpIn11qoATUt3.jpg" alt="钱老和杨先生"><br>《围城》写出了婚姻的一方面，但不是全部，很多人要冲进这座城，自有其道理，城中有争吵，但更有温情。愿诸位在现实生活中，相互欣赏，相敬如宾，如初见一样，相互爱戴，生活一定更加美好</p><p>在新春佳节祝大家幸福美满，阖家欢乐。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.xiangzhangshugongyi.com/Fg0jOuF4-dBp5moIX00V4Q0X5C11.jpg&quot; alt=&quot;围城&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;婚姻是被围困的城堡，城外的人想冲进去，城里的人想逃出来  –法国谚语&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="读书" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="阅读笔记" scheme="https://jiangxingye.github.io/categories/%E8%AF%BB%E4%B9%A6/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="reading" scheme="https://jiangxingye.github.io/tags/reading/"/>
    
  </entry>
  
</feed>
